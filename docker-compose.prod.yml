version: '3.8'

services:
  # PHP Application Service with production optimizations
  app:
    build:
      context: ./docker/php
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
    volumes:
      - ./src:/var/www
      - ./docker/php/production.ini:/usr/local/etc/php/conf.d/local.ini

  # Nginx Service with production configuration
  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    volumes:
      - ./src:/var/www
      - ./docker/nginx/production.conf:/etc/nginx/conf.d/app.conf
      - ./ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx

  # MySQL Service with production settings
  mysql:
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/production.cnf:/etc/mysql/conf.d/my.cnf
      - ./logs/mysql:/var/log/mysql
      - ./backups:/backups

  # Redis Service with persistence
  redis:
    restart: unless-stopped
    volumes:
      - redis_data:/data
      - ./logs/redis:/var/log/redis

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  laravel_network:
    driver: bridge 