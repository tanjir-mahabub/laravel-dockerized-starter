version: '3.8'

services:
  # PHP Application Service with development tools
  app:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    environment:
      - XDEBUG_MODE=debug
      - XDEBUG_CONFIG=client_host=host.docker.internal
    volumes:
      - ./src:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./docker/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini

  # Nginx Service with development configuration
  nginx:
    volumes:
      - ./src:/var/www
      - ./docker/nginx/conf.d/app.dev.conf:/etc/nginx/conf.d/app.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx

  # MySQL Service with development settings
  mysql:
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: laravel_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./logs/mysql:/var/log/mysql

  # Redis Service
  redis:
    volumes:
      - redis_data:/data
      - ./logs/redis:/var/log/redis

  # MailHog for Email Testing
  mailhog:
    volumes:
      - ./logs/mailhog:/var/log/mailhog

  # PHPMyAdmin for database management
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: laravel_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: laravel_user
      PMA_PASSWORD: laravel_password
      MYSQL_ROOT_PASSWORD: root_password
    ports:
      - '8080:80'
    networks:
      - laravel_network
    depends_on:
      - mysql

  # Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: laravel_redis_commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - '8081:8081'
    networks:
      - laravel_network
    depends_on:
      - redis

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  laravel_network:
    driver: bridge
